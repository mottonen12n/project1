[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(C:\Scala\Project1\project1\src\main\scala\news\jsonparsingtest.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(news.Main.Article, news.Main.apiResponse, news.Main.Source, news.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(news.Main.Article, news.Main.apiResponse, news.Main.Source, news.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all 1 sources: invalidated sources (1) exceeded 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 1 Scala source to C:\Scala\Project1\project1\target\scala-2.11\classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.11:1.2.5:compile for Scala 2.11.8[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.11:1.2.5:compile for Scala 2.11.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 58422435 for Scala compiler version 2.11.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Program Files\Java\jre1.8.0_311\lib\resources.jar;C:\Program Files\Java\jre1.8.0_311\lib\rt.jar;C:\Program Files\Java\jre1.8.0_311\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_311\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_311\lib\jce.jar;C:\Program Files\Java\jre1.8.0_311\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_311\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_311\classes;C:\Users\Work\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.11.8.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Scala\Project1\project1\target\scala-2.11\classes;C:\Users\Work\.ivy2\cache\org.apache.hadoop\hadoop-client\jars\hadoop-client-2.7.0.jar;C:\Users\Work\.ivy2\cache\org.apache.hadoop\hadoop-common\jars\hadoop-common-2.7.0.jar;C:\Users\Work\.ivy2\cache\org.apache.hadoop\hadoop-annotations\jars\hadoop-annotations-2.7.0.jar;C:\Users\Work\.ivy2\cache\com.google.guava\guava\jars\guava-11.0.2.jar;C:\Users\Work\.ivy2\cache\com.google.code.findbugs\jsr305\jars\jsr305-3.0.0.jar;C:\Users\Work\.ivy2\cache\commons-cli\commons-cli\jars\commons-cli-1.2.jar;C:\Users\Work\.ivy2\cache\org.apache.commons\commons-math3\jars\commons-math3-3.1.1.jar;C:\Users\Work\.ivy2\cache\xmlenc\xmlenc\jars\xmlenc-0.52.jar;C:\Users\Work\.ivy2\cache\commons-httpclient\commons-httpclient\jars\commons-httpclient-3.1.jar;C:\Users\Work\.ivy2\cache\commons-logging\commons-logging\jars\commons-logging-1.1.3.jar;C:\Users\Work\.ivy2\cache\commons-codec\commons-codec\jars\commons-codec-1.4.jar;C:\Users\Work\.ivy2\cache\commons-io\commons-io\jars\commons-io-2.4.jar;C:\Users\Work\.ivy2\cache\commons-net\commons-net\jars\commons-net-3.1.jar;C:\Users\Work\.ivy2\cache\commons-collections\commons-collections\jars\commons-collections-3.2.1.jar;C:\Users\Work\.ivy2\cache\log4j\log4j\bundles\log4j-1.2.17.jar;C:\Users\Work\.ivy2\cache\commons-lang\commons-lang\jars\commons-lang-2.6.jar;C:\Users\Work\.ivy2\cache\commons-configuration\commons-configuration\jars\commons-configuration-1.6.jar;C:\Users\Work\.ivy2\cache\commons-digester\commons-digester\jars\commons-digester-1.8.jar;C:\Users\Work\.ivy2\cache\commons-beanutils\commons-beanutils\jars\commons-beanutils-1.7.0.jar;C:\Users\Work\.ivy2\cache\commons-beanutils\commons-beanutils-core\jars\commons-beanutils-core-1.8.0.jar;C:\Users\Work\.ivy2\cache\org.slf4j\slf4j-api\jars\slf4j-api-1.7.10.jar;C:\Users\Work\.ivy2\cache\org.codehaus.jackson\jackson-core-asl\jars\jackson-core-asl-1.9.13.jar;C:\Users\Work\.ivy2\cache\org.codehaus.jackson\jackson-mapper-asl\jars\jackson-mapper-asl-1.9.13.jar;C:\Users\Work\.ivy2\cache\org.apache.avro\avro\jars\avro-1.7.4.jar;C:\Users\Work\.ivy2\cache\org.xerial.snappy\snappy-java\bundles\snappy-java-1.0.4.1.jar;C:\Users\Work\.ivy2\cache\org.apache.commons\commons-compress\jars\commons-compress-1.4.1.jar;C:\Users\Work\.ivy2\cache\org.tukaani\xz\jars\xz-1.0.jar;C:\Users\Work\.ivy2\cache\com.google.protobuf\protobuf-java\bundles\protobuf-java-2.5.0.jar;C:\Users\Work\.ivy2\cache\com.google.code.gson\gson\jars\gson-2.2.4.jar;C:\Users\Work\.ivy2\cache\org.apache.hadoop\hadoop-auth\jars\hadoop-auth-2.7.0.jar;C:\Users\Work\.ivy2\cache\org.apache.httpcomponents\httpclient\jars\httpclient-4.2.5.jar;C:\Users\Work\.ivy2\cache\org.apache.httpcomponents\httpcore\jars\httpcore-4.2.4.jar;C:\Users\Work\.ivy2\cache\org.apache.directory.server\apacheds-kerberos-codec\bundles\apacheds-kerberos-codec-2.0.0-M15.jar;C:\Users\Work\.ivy2\cache\org.apache.directory.server\apacheds-i18n\bundles\apacheds-i18n-2.0.0-M15.jar;C:\Users\Work\.ivy2\cache\org.apache.directory.api\api-asn1-api\bundles\api-asn1-api-1.0.0-M20.jar;C:\Users\Work\.ivy2\cache\org.apache.directory.api\api-util\bundles\api-util-1.0.0-M20.jar;C:\Users\Work\.ivy2\cache\org.apache.zookeeper\zookeeper\jars\zookeeper-3.4.6.jar;C:\Users\Work\.ivy2\cache\io.netty\netty\bundles\netty-3.7.0.Final.jar;C:\Users\Work\.ivy2\cache\org.apache.curator\curator-framework\bundles\curator-framework-2.7.1.jar;C:\Users\Work\.ivy2\cache\org.apache.curator\curator-client\bundles\curator-client-2.7.1.jar;C:\Users\Work\.ivy2\cache\org.apache.curator\curator-recipes\bundles\curator-recipes-2.7.1.jar;C:\Users\Work\.ivy2\cache\org.apache.htrace\htrace-core\jars\htrace-core-3.1.0-incubating.jar;C:\Users\Work\.ivy2\cache\org.apache.hadoop\hadoop-hdfs\jars\hadoop-hdfs-2.7.0.jar;C:\Users\Work\.ivy2\cache\org.mortbay.jetty\jetty-util\jars\jetty-util-6.1.26.jar;C:\Users\Work\.ivy2\cache\io.netty\netty-all\jars\netty-all-4.0.23.Final.jar;C:\Users\Work\.ivy2\cache\xerces\xercesImpl\jars\xercesImpl-2.9.1.jar;C:\Users\Work\.ivy2\cache\xml-apis\xml-apis\jars\xml-apis-1.3.04.jar;C:\Users\Work\.ivy2\cache\org.fusesource.leveldbjni\leveldbjni-all\bundles\leveldbjni-all-1.8.jar;C:\Users\Work\.ivy2\cache\org.apache.hadoop\hadoop-mapreduce-client-app\jars\hadoop-mapreduce-client-app-2.7.0.jar;C:\Users\Work\.ivy2\cache\org.apache.hadoop\hadoop-mapreduce-client-common\jars\hadoop-mapreduce-client-common-2.7.0.jar;C:\Users\Work\.ivy2\cache\org.apache.hadoop\hadoop-yarn-common\jars\hadoop-yarn-common-2.7.0.jar;C:\Users\Work\.ivy2\cache\org.apache.hadoop\hadoop-yarn-api\jars\hadoop-yarn-api-2.7.0.jar;C:\Users\Work\.ivy2\cache\javax.xml.bind\jaxb-api\jars\jaxb-api-2.2.2.jar;C:\Users\Work\.ivy2\cache\javax.xml.stream\stax-api\jars\stax-api-1.0-2.jar;C:\Users\Work\.ivy2\cache\javax.activation\activation\jars\activation-1.1.jar;C:\Users\Work\.ivy2\cache\com.sun.jersey\jersey-core\bundles\jersey-core-1.9.jar;C:\Users\Work\.ivy2\cache\com.sun.jersey\jersey-client\bundles\jersey-client-1.9.jar;C:\Users\Work\.ivy2\cache\org.codehaus.jackson\jackson-jaxrs\jars\jackson-jaxrs-1.9.13.jar;C:\Users\Work\.ivy2\cache\org.codehaus.jackson\jackson-xc\jars\jackson-xc-1.9.13.jar;C:\Users\Work\.ivy2\cache\com.google.inject\guice\jars\guice-3.0.jar;C:\Users\Work\.ivy2\cache\javax.inject\javax.inject\jars\javax.inject-1.jar;C:\Users\Work\.ivy2\cache\aopalliance\aopalliance\jars\aopalliance-1.0.jar;C:\Users\Work\.ivy2\cache\org.sonatype.sisu.inject\cglib\jars\cglib-2.2.1-v20090111.jar;C:\Users\Work\.ivy2\cache\asm\asm\jars\asm-3.1.jar;C:\Users\Work\.ivy2\cache\com.sun.jersey\jersey-server\bundles\jersey-server-1.9.jar;C:\Users\Work\.ivy2\cache\com.sun.jersey\jersey-json\bundles\jersey-json-1.9.jar;C:\Users\Work\.ivy2\cache\org.codehaus.jettison\jettison\bundles\jettison-1.1.jar;C:\Users\Work\.ivy2\cache\com.sun.xml.bind\jaxb-impl\jars\jaxb-impl-2.2.3-1.jar;C:\Users\Work\.ivy2\cache\com.sun.jersey.contribs\jersey-guice\jars\jersey-guice-1.9.jar;C:\Users\Work\.ivy2\cache\org.apache.hadoop\hadoop-yarn-client\jars\hadoop-yarn-client-2.7.0.jar;C:\Users\Work\.ivy2\cache\org.apache.hadoop\hadoop-mapreduce-client-core\jars\hadoop-mapreduce-client-core-2.7.0.jar;C:\Users\Work\.ivy2\cache\org.slf4j\slf4j-log4j12\jars\slf4j-log4j12-1.7.10.jar;C:\Users\Work\.ivy2\cache\org.apache.hadoop\hadoop-yarn-server-common\jars\hadoop-yarn-server-common-2.7.0.jar;C:\Users\Work\.ivy2\cache\org.apache.hadoop\hadoop-mapreduce-client-shuffle\jars\hadoop-mapreduce-client-shuffle-2.7.0.jar;C:\Users\Work\.ivy2\cache\org.apache.hadoop\hadoop-mapreduce-client-jobclient\jars\hadoop-mapreduce-client-jobclient-2.7.0.jar;C:\Users\Work\.ivy2\cache\javax.servlet.jsp\jsp-api\jars\jsp-api-2.1.jar;C:\Users\Work\.ivy2\cache\junit\junit\jars\junit-3.8.1.jar;C:\Users\Work\.ivy2\cache\javax.servlet\servlet-api\jars\servlet-api-2.5.jar;C:\Users\Work\.ivy2\cache\net.liftweb\lift-json_2.11\jars\lift-json_2.11-2.6.jar;C:\Users\Work\.ivy2\cache\org.scala-lang\scalap\jars\scalap-2.11.8.jar;C:\Users\Work\.ivy2\cache\org.scala-lang\scala-compiler\jars\scala-compiler-2.11.8.jar;C:\Users\Work\.ivy2\cache\org.scala-lang\scala-reflect\jars\scala-reflect-2.11.8.jar;C:\Users\Work\.ivy2\cache\org.scala-lang.modules\scala-xml_2.11\bundles\scala-xml_2.11-1.0.4.jar;C:\Users\Work\.ivy2\cache\org.scala-lang.modules\scala-parser-combinators_2.11\bundles\scala-parser-combinators_2.11-1.0.4.jar;C:\Users\Work\.ivy2\cache\com.thoughtworks.paranamer\paranamer\jars\paranamer-2.4.1.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 1.3160241 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from news.Main.Article...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(news.Main.Article)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(news.Main.Article)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(news.Main.Article,ModifiedNames(changes = UsedName(urlToImage,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$6,[Default]), UsedName(copy$default$4,[Default]), UsedName(copy$default$7,[Default]), UsedName(copy$default$5,[Default]), UsedName(clone,[Default]), UsedName(title,[Default]), UsedName(publishedAt,[Default]), UsedName(apply,[Default]), UsedName(description,[Default]), UsedName($init$,[Default]), UsedName(synchronized,[Default]), UsedName(!=,[Default]), UsedName(asInstanceOf,[Default]), UsedName(tupled,[Default]), UsedName(url,[Default]), UsedName(copy$default$2,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(source,[Default]), UsedName(unapply,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(curried,[Default]), UsedName(content,[Default]), UsedName(productIterator,[Default]), UsedName(==,[Default]), UsedName(productElement,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(Article,[Default]), UsedName(copy$default$8,[Default]), UsedName(copy$default$3,[Default]), UsedName(canEqual,[Default]), UsedName(finalize,[Default]), UsedName(author,[Default]), UsedName(eq,[Default]), UsedName(news;Main;Article;init;,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName(notify,[Default]), UsedName(getClass,[Default]), UsedName(wait,[Default]))) invalidates 1 classes due to The news.Main.Article has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(urlToImage,[Default]), UsedName($asInstanceOf,[Default]), UsedName(copy$default$6,[Default]), UsedName(copy$default$4,[Default]), UsedName(copy$default$7,[Default]), UsedName(copy$default$5,[Default]), UsedName(clone,[Default]), UsedName(title,[Default]), UsedName(publishedAt,[Default]), UsedName(apply,[Default]), UsedName(description,[Default]), UsedName($init$,[Default]), UsedName(synchronized,[Default]), UsedName(!=,[Default]), UsedName(asInstanceOf,[Default]), UsedName(tupled,[Default]), UsedName(url,[Default]), UsedName(copy$default$2,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(source,[Default]), UsedName(unapply,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(curried,[Default]), UsedName(content,[Default]), UsedName(productIterator,[Default]), UsedName(==,[Default]), UsedName(productElement,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(Article,[Default]), UsedName(copy$default$8,[Default]), UsedName(copy$default$3,[Default]), UsedName(canEqual,[Default]), UsedName(finalize,[Default]), UsedName(author,[Default]), UsedName(eq,[Default]), UsedName(news;Main;Article;init;,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName(notify,[Default]), UsedName(getClass,[Default]), UsedName(wait,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(news.Main.Article)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from news.Main.apiResponse...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(news.Main.apiResponse)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(news.Main.apiResponse)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(news.Main.apiResponse,ModifiedNames(changes = UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(apply,[Default]), UsedName(articles,[Default]), UsedName($init$,[Default]), UsedName(synchronized,[Default]), UsedName(!=,[Default]), UsedName(asInstanceOf,[Default]), UsedName(tupled,[Default]), UsedName(copy$default$2,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(unapply,[Default]), UsedName(status,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(curried,[Default]), UsedName(productIterator,[Default]), UsedName(==,[Default]), UsedName(productElement,[Default]), UsedName(news;Main;apiResponse;init;,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(copy$default$3,[Default]), UsedName(canEqual,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName(notify,[Default]), UsedName(totalResults,[Default]), UsedName(getClass,[Default]), UsedName(wait,[Default]), UsedName(apiResponse,[Default]))) invalidates 1 classes due to The news.Main.apiResponse has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(apply,[Default]), UsedName(articles,[Default]), UsedName($init$,[Default]), UsedName(synchronized,[Default]), UsedName(!=,[Default]), UsedName(asInstanceOf,[Default]), UsedName(tupled,[Default]), UsedName(copy$default$2,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(unapply,[Default]), UsedName(status,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(curried,[Default]), UsedName(productIterator,[Default]), UsedName(==,[Default]), UsedName(productElement,[Default]), UsedName(news;Main;apiResponse;init;,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(copy$default$3,[Default]), UsedName(canEqual,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName(notify,[Default]), UsedName(totalResults,[Default]), UsedName(getClass,[Default]), UsedName(wait,[Default]), UsedName(apiResponse,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(news.Main.apiResponse)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from news.Main.Source...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(news.Main.Source)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(news.Main.Source)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(news.Main.Source,ModifiedNames(changes = UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(news;Main;Source;init;,[Default]), UsedName(apply,[Default]), UsedName($init$,[Default]), UsedName(synchronized,[Default]), UsedName(!=,[Default]), UsedName(name,[Default]), UsedName(id,[Default]), UsedName(asInstanceOf,[Default]), UsedName(tupled,[Default]), UsedName(copy$default$2,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(Source,[Default]), UsedName(unapply,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(curried,[Default]), UsedName(productIterator,[Default]), UsedName(==,[Default]), UsedName(productElement,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(canEqual,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName(notify,[Default]), UsedName(getClass,[Default]), UsedName(wait,[Default]))) invalidates 1 classes due to The news.Main.Source has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(news;Main;Source;init;,[Default]), UsedName(apply,[Default]), UsedName($init$,[Default]), UsedName(synchronized,[Default]), UsedName(!=,[Default]), UsedName(name,[Default]), UsedName(id,[Default]), UsedName(asInstanceOf,[Default]), UsedName(tupled,[Default]), UsedName(copy$default$2,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(Source,[Default]), UsedName(unapply,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(curried,[Default]), UsedName(productIterator,[Default]), UsedName(==,[Default]), UsedName(productElement,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(canEqual,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(productPrefix,[Default]), UsedName(hashCode,[Default]), UsedName(productArity,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName(notify,[Default]), UsedName(getClass,[Default]), UsedName(wait,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(news.Main.Source)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from news.Main...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(news.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(news.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(news.Main,ModifiedNames(changes = UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(main,[Default]), UsedName(synchronized,[Default]), UsedName(!=,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getRestContent,[Default]), UsedName(Source,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(Article,[Default]), UsedName(Main,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(hashCode,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(notify,[Default]), UsedName(getClass,[Default]), UsedName(wait,[Default]), UsedName(apiResponse,[Default]))) invalidates 1 classes due to The news.Main has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName($asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(main,[Default]), UsedName(synchronized,[Default]), UsedName(!=,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notifyAll,[Default]), UsedName(getRestContent,[Default]), UsedName(Source,[Default]), UsedName($isInstanceOf,[Default]), UsedName(isInstanceOf,[Default]), UsedName(==,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(Article,[Default]), UsedName(Main,[Default]), UsedName(finalize,[Default]), UsedName(eq,[Default]), UsedName(hashCode,[Default]), UsedName(ne,[Default]), UsedName(equals,[Default]), UsedName(notify,[Default]), UsedName(getClass,[Default]), UsedName(wait,[Default]), UsedName(apiResponse,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(news.Main)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
