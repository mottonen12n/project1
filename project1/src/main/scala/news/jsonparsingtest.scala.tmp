package news

import net.liftweb.json._
import org.apache.http.HttpEntity
import org.apache.http.HttpResponse
import org.apache.http.client.ClientProtocolException
import org.apache.http.client.HttpClient
import org.apache.http.client.methods.HttpGet
import org.apache.http.impl.client.DefaultHttpClient

object Main {

    case class Article (source: Source, author: String, title: String, description: String, url: String, urlToImage: String, publishedAt: String, content: String)
    case class Source (id: String, name: String)
    case class apiResponse (status: String, totalResults: Int, articles: Array[Article])

    def main(args: Array[String]): Unit = {
        implicit val formats = DefaultFormats
        var data = getRestContent("https://newsapi.org/v2/everything?q=nhl&apiKey=514d7d8f72a14c57a8e1a70db84bc052")
        //println(data)
        val jValue = parse(data)
        val results = jValue.extract[apiResponse]
        println(results)
        for(a <- results.articles) println(s"${a.title} | ${a.source.name} | ${a.publishedAt} | ${a.content}")
        
        
    }

    def getRestContent(url: String): String = {
    val httpClient = new DefaultHttpClient()
    val httpResponse = httpClient.execute(new HttpGet(url))
    val entity = httpResponse.getEntity()
    var content = ""
    if (entity != null) {
      val inputStream = entity.getContent()
      content = scala.io.Source.fromInputStream(inputStream).getLines.mkString
      inputStream.close
    }
    httpClient.getConnectionManager().shutdown()
    return content
  }

}